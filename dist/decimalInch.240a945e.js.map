{"version":3,"sources":["decimalInch.js"],"names":["inches","resolution","exactMetricOutput","document","getElementById","increaseResolution","decreaseResolution","resolutionPower","input","addEventListener","inchUpdate","event","preventDefault","target","value","parseInt","processResolution","resolutionUpdate","console","log","val","temp","innerHTML","Math","pow","updateOutput","abs","wOutput","roundToThree","exactMetric","exact","stringifymm","upperMetric","mm","ceil","diff","toFixed","lowerMetric","floor","lowerFraction","upperFraction","digits","candidateArray","arr","i","push","smaller","position","j","length","fraction","simplify","decFraction","string","trunc","toString","larger","str","result","data","split","numOne","Number","numTwo","max","num","round"],"mappings":"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","file":"decimalInch.240a945e.js","sourceRoot":"..","sourcesContent":["let inches = 0;\nlet resolution = 6;\n\nlet exactMetricOutput = document.getElementById('exactMetricOutput');\n\nlet increaseResolution = document.getElementById('increaseResolution');\nlet decreaseResolution = document.getElementById('decreaseResolution');\nlet resolutionPower = document.getElementById('resolutionSlider');\n\nlet input = document.getElementById('Inches');\ninput.addEventListener('input', inchUpdate);\n\nincreaseResolution.addEventListener('click', (event) => {\n  event.preventDefault();\n  let target = document.getElementById('resolutionSlider');\n  target.value = parseInt(target.value) + 1;\n  processResolution(target.value);\n});\n\ndecreaseResolution.addEventListener('click', (event) => {\n  event.preventDefault();\n  let target = document.getElementById('resolutionSlider');\n  target.value = parseInt(target.value) - 1;\n  processResolution(target.value);\n});\n\nresolutionPower.addEventListener('input', resolutionUpdate);\n\nfunction resolutionUpdate() {\n  console.log(`resolutionUpdate(): ${this.value}`);\n  processResolution(this.value);\n}\n\nfunction processResolution(val) {\n  let temp = parseInt(val);\n  if (temp < 1) {\n    temp = 1;\n  } else if (temp > 6) {\n    temp = 6;\n  }\n  console.log('temp: ' + temp);\n  resolution = temp;\n  document.getElementById('test').innerHTML = `Fraction Resolution: 1/${Math.pow(2, resolution)}\"`;\n  updateOutput();\n}\n\nfunction inchUpdate() {\n  inches = Math.abs(this.value);\n  wOutput.innerHTML = `${roundToThree(inches)}\"`;\n  updateOutput();\n}\n\nfunction exactMetric() {\n  let exact = inches * 25.4;\n  exactMetricOutput.innerHTML = stringifymm(exact);\n}\n\nfunction upperMetric() {\n  mm = Math.ceil(inches * 25.4);\n  diff = Math.abs((inches - (mm  / 25.4)).toFixed(3));\n  document.getElementById('metric_over').innerHTML = `${stringifymm(mm, 0)} - ${Math.abs(diff).toFixed(3)}\"`;\n}\n\nfunction lowerMetric() {\n  let mm = Math.floor(inches * 25.4);\n  let diff = (inches - (mm / 25.4)).toFixed(3);\n  document.getElementById('metric_under').innerHTML = `${stringifymm(mm, 0)} + ${diff}\"`;\n}\n\nfunction updateOutput() {\n  lowerMetric();\n  exactMetric();\n  upperMetric();\n  lowerFraction();\n  upperFraction();\n}\n\nfunction stringifymm(val, digits = 2) {\n  if (val > 1000) {\n    return `${(val / 1000).toFixed(2)}m`;\n  } else if (val > 100) {\n    return `${(val / 10).toFixed(1)}cm`;\n  } else {\n    return `${(val).toFixed(digits)}mm`;\n  }\n}\n\nfunction candidateArray() {\n  let arr = [0];\n  for (let i = 0; i < Math.pow(2, resolution) ; i++) {\n    arr.push(arr[i] + Math.pow(2, -1 * resolution));\n  }\n  return arr;\n}\n\nfunction lowerFraction() {\n  let arr = candidateArray();\n  let diff = inches % 1.0;\n  let smaller = 0;\n  let position = 0;\n\n  for (let j = 0; j < arr.length; j++) {\n    if (diff >= arr[j]) {\n      smaller = arr[j];\n      position = j;\n    }\n  }\n\n  let fraction = simplify(`${position} / ${Math.pow(2, resolution)}`);\n  let decFraction = position / Math.pow(2, resolution);\n\n  let string = 'Smaller: ';\n  string += (inches > 1.0) ? `${(Math.trunc(inches).toString() )}-` : '';\n  string += `${fraction}\" + ${(diff - decFraction).toFixed(3)}\"`;\n\n  document.getElementById('smallerFraction').innerHTML = string;\n}\n\nfunction upperFraction() {\n  let arr = candidateArray();\n  let diff = inches % 1.0;\n  let larger = arr[arr.length - 1];\n  let position = arr.length;\n\n  for (let j = arr.length; j >= 0; j--) {\n    if (diff <= arr[j]) {\n      larger = arr[j];\n      position = j;\n    }\n  }\n  let fraction = simplify(`${position} / ${Math.pow(2, resolution)}`);\n  let decFraction = position / Math.pow(2, resolution);\n  document.getElementById('largerFraction').innerHTML =  \n    `Larger: ${fraction}\" - ${(decFraction - diff).toFixed(3)}\"`;\n\n  let string = 'Larger: ';\n  string += (inches > 1.0) ? `${(Math.trunc(inches).toString() )}-` : '';\n  string += `${fraction}\" - ${(decFraction - diff).toFixed(3)}\"`;\n\n  document.getElementById('largerFraction').innerHTML = string;\n}\n\n// https://www.geeksforgeeks.org/reduce-a-fraction-to-its-simplest-form-by-using-javascript/\nfunction simplify(str) { \n  var result = '', data = str.split('/'),  \n  numOne = Number(data[0]),  \n  numTwo = Number(data[1]); \n  for (var i = Math.max(numOne, numTwo); i > 1; i--) { \n    if ((numOne % i == 0) && (numTwo % i == 0)) { \n      numOne /= i; \n      numTwo /= i;\n    }\n  } \n  if (numTwo === 1) { \n    result = numOne.toString() \n  } else { \n  result = numOne.toString() + '/' + numTwo.toString() \n  } \n  return result \n}\n\nfunction roundToThree(num) {    \n  return +(Math.round(num + \"e+3\")  + \"e-3\");\n} // Adapted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n"]}